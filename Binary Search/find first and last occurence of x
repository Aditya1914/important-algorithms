class Solution {
    public int[] searchRange(int[] nums, int target) {
      int first = Firstandlast(nums,target,true);
      if(first == -1){
          return new int[]{-1,-1};
      }
      int last = Firstandlast(nums,target,false);
      return new int[]{first,last};
        
       
    }
    public int Firstandlast(int []nums, int target, Boolean flagfirst){
        int n = nums.length;
        int high = n-1;
        int low = 0;

        while(low <= high){
            int mid = low + (high-low)/2;
            if(nums[mid] == target){
                if(flagfirst){
                    if(mid==0 || nums[mid - 1] != target){
                        return mid;
                    }
                     high = mid - 1;
                }
                else{ 
                if(mid == n-1 || nums[mid + 1] != target){
                    return mid;
                }
                low = mid + 1;
            }
            }
            else if(nums[mid] < target){
                low = mid + 1;

            }
            else high = mid - 1;
        }
        return -1;
    }
}
