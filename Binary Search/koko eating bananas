class Solution {
    public int minEatingSpeed(int[] piles, int h) {
        int max = Integer.MIN_VALUE;
        
        for(int num : piles){
            max = Math.max(max,num);
        }
        int low = 1;
        int high = max;

        while( low <= high){
            int mid = low + (high - low)/2;
            if(deadline(piles,mid) <= h){
                high = mid -1;
            }
            else low = mid+1;
        }
        return low;
    }
    public long deadline(int []piles,int mid ){
        long ans = 0;
        for(int i = 0; i < piles.length; i++){
             long temp = (long)Math.ceil((double)piles[i]/(double)mid);
             ans += temp; 
        }
        return ans;
    }
}
