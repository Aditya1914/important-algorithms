class Solution 
{
    //Function to find minimum number of pages.
    public static int findPages(int[]a,int n,int m)
    {
        // brute force linear search
       /*
         if(n < m )return -1;
        int max = Integer.MIN_VALUE;
        int sum = 0;
        for(int x : a){
            sum += x;
            max = Math.max(max,x);
        }
        
        for(int pages = max ; pages <= sum; pages++){
            int books_allocated = no_of_students(pages,a);
            if( books_allocated <= m)return pages; //probabilty of allotement of books range 
            can be down by  ( 6 -> 4) , i.e we are taking < and  ==   
            
        }
        return -1;
        */
        
        // binary search 
        
         if(n < m )return -1;
        int low = Integer.MIN_VALUE;
        int high = 0;
        for(int x : a){
            high += x;
            low = Math.max(low,x);
        }
        
        while( low <= high){
            int mid = low + (high -low)/2;
            int allocated = no_of_students(mid,a);
            if( allocated > m){
                low = mid +1;
            }
            else high = mid-1;
            
        }
        return low;
        
    }
    public static int no_of_students(int pages,int a[]){
        int students = 1;
        int pagescount = 0;
        for(int i = 0; i < a.length; i++){
            if( pagescount + a[i] <= pages){
                pagescount += a[i];
                
            }
            else{
                students++;
                pagescount = a[i];
            }
        }
        return students;
    }
};
