//Binary search ,tc- O(log n + log m) , sc = O(1) 
//if not understood refer ques -> median of two sorted arrays

class Solution {
    public long kthElement( int arr1[], int arr2[], int n, int m, int k) {
        if( n > m)return kthElement( arr2,arr1,m,n,k);
        int left = k;
        int low = Math.max( k - m, 0);
        int high = Math.min(n,k);
        
        while(low <= high){
        int mid1 = low +(high - low)/2;
        int mid2 = left - mid1;
        int l1= Integer.MIN_VALUE;
        int l2 = Integer.MIN_VALUE;
        int r1 = Integer.MAX_VALUE;
        int r2 = Integer.MAX_VALUE;
        if( mid1 > 0)l1 = arr1[mid1-1];
        if( mid2 > 0)l2 = arr2[mid2 -1];
        if( mid1 < n)r1 = arr1[mid1];
        if( mid2 < m)r2 = arr2[mid2];
        
        if( l1 <= r2 && l2 <= r1){
            return Math.max(l1,l2);
        }
        else if(l1 > r2)high = mid1 -1;
        else low = mid1 +1;
            
        }
        return 0;
    }
}
