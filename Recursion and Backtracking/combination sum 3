class Solution {
  public:
    vector<vector<int>> combinationSum(int K, int N) {
        vector<vector<int>> ans;
        vector<int> temp;
        helper(temp , ans , 1 , K ,N);
        return ans;
    }
    void helper(vector<int> &temp , vector<vector<int>> &ans , int idx , int k , int n){
        if( idx > 9){
             if( n == 0 && k == 0){
            ans.push_back(temp);
        }
            return;
        }
        
        
        if( n == 0 && k == 0){
            ans.push_back(temp);
            return;
        }
        
        if( n < 0 || k < 0){
            return;
        }
        
        
        
        temp.push_back(idx);
        helper(temp, ans , idx +1 ,k -1 , n - idx);
        temp.pop_back();
        helper(temp ,ans , idx +1, k , n);
    }
};

TC - O(2 ^ N)
SC - O(N)
